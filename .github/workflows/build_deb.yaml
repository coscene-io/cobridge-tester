name: build deb
on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build-deb-package:
    strategy:
      fail-fast: false
      matrix:
        include:
          - ros_distribution: indigo
            arch: amd64
            distro: trusty
            label: ubuntu-latest
          - ros_distribution: indigo
            arch: armhf
            distro: trusty
            label: [ linux-arm-64-8c-32g-300gb ]
          # - ros_distribution: melodic
          #   arch: amd64
          #   distro: bionic
          #   label: ubuntu-latest
          # - ros_distribution: melodic
          #   arch: arm64
          #   distro: bionic
          #   label: [ linux-arm-64-8c-32g-300gb ]
          # - ros_distribution: noetic
          #   arch: amd64
          #   distro: focal
          #   label: ubuntu-latest
          # - ros_distribution: noetic
          #   arch: arm64
          #   distro: focal
          #   label: [ linux-arm-64-8c-32g-300gb ]
          # - ros_distribution: foxy
          #   arch: amd64
          #   distro: focal
          #   label: ubuntu-latest
          # - ros_distribution: foxy
          #   arch: arm64
          #   distro: focal
          #   label: [ linux-arm-64-8c-32g-300gb ]
          # - ros_distribution: humble
          #   arch: amd64
          #   distro: jammy
          #   label: ubuntu-latest
          # - ros_distribution: humble
          #   arch: arm64
          #   distro: jammy
          #   label: [ linux-arm-64-8c-32g-300gb ]
          # - ros_distribution: jazzy
          #   arch: amd64
          #   distro: noble
          #   label: ubuntu-latest
          # - ros_distribution: jazzy
          #   arch: arm64
          #   distro: noble
          #   label: [ linux-arm-64-8c-32g-300gb ]

    name: Build deb (ROS ${{ matrix.ros_distribution }} - ${{ matrix.arch }})
    runs-on: ${{ matrix.label }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Build in container
        uses: addnab/docker-run-action@v3
        with:
          image: cobridge/ros-${{ matrix.ros_distribution }}:latest
          options: -v ${{ github.workspace }}:/workspace
          run: |
            cd /workspace
            
            if [ "${{ matrix.ros_distribution }}" = "indigo" ] || [ "${{ matrix.ros_distribution }}" = "melodic" ]; then
              echo "Setting up git for indigo/melodic"
              git config --global --add safe.directory /workspace
              git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"
            fi
            
            if [ "${{ github.event_name }}" = "release" ]; then
              VERSION=$(echo $GITHUB_REF | sed 's#refs/tags/v##')
              echo "Version: $VERSION"
              echo "GITHUB_REF: $GITHUB_REF"
              sed -i "s#<version>.*</version>#<version>$VERSION</version>#" ./package.xml
            fi
            
            rosdep update --rosdistro=${{ matrix.ros_distribution }} --include-eol-distros
            bloom-generate rosdebian --ros-distro ${{ matrix.ros_distribution }}
            DEB_BUILD_OPTIONS=nocheck dpkg-buildpackage -b -us -uc -a${{ matrix.arch }}
            
            mkdir -p /workspace/artifacts
            chmod -R 777 /workspace/artifacts
            echo "list directory: /workspace/artifacts"
            ls -larth /workspace/artifacts
            echo "list directory: .."
            ls -larth ..
            
            find .. -name "*.deb" -exec cp {} /workspace/artifacts/ \;
            
            if [ -d "/workspace/artifacts" ] && [ "$(ls -A /workspace/artifacts/*.deb 2>/dev/null)" ]; then
              DEB_FILENAME=$(basename $(ls /workspace/artifacts/*.deb))
              echo "DEB_FILENAME=$DEB_FILENAME" >> $GITHUB_ENV
              echo "成功创建deb包: $DEB_FILENAME"
            else
              echo "警告: 未找到deb包，检查构建过程"
              find .. -name "*.deb" || echo "没有找到deb文件"
              ls -la /workspace || echo "无法访问工作空间"
            fi
      
      - name: Upload deb package
        uses: actions/upload-artifact@v4
        with:
          name: ros-${{ matrix.ros_distribution }}-${{ matrix.arch }}-deb
          path: artifacts/*.deb
          retention-days: 7
          if-no-files-found: warn

